        // handlers/memberEventsHandler.js
const getPlayerDescription = require('./../db/getDescriptionDb');

module.exports = function(bot, notifyChatId, threadMessageId) {
          // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
          bot.on('message', (msg) => {
            if (msg.left_chat_member || msg.new_chat_members) {
            //  console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏:', JSON.stringify(msg, null, 2));
            }
          });
          // ‚úÖ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
          bot.on('new_chat_members', async (msg) => {
  const chatTitle = msg.chat.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';

  await Promise.all(
    msg.new_chat_members.map(async (user) => {
      const tag = user.username ? `@${user.username}` : null;
      const name = tag || `${user.first_name} ${user.last_name || ''}`.trim();

      const player = tag ? await getPlayerDescription(tag) : null;
      console.log(player);
      const message =
        `‚úÖ –í—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É "${chatTitle}": ${name}` +
        (player ? `\n–ù–∏–∫: ${player.nick}\n–ö–ª–∞–Ω: ${player.clan}` : '');

      /*return bot.sendMessage(notifyChatId, message, {
        reply_to_message_id: threadMessageId
      }); */

      try {
        await bot.sendMessage(notifyChatId, message, {
          reply_to_message_id: threadMessageId, // –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π
        //  allow_sending_without_reply: true
        });
      } catch (err) {
      //  console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ notifyChatId:', err.description || err.message);
      }

    })
  );
});

          // üìå –£—á–∞—Å—Ç–Ω–∏–∫ –≤—ã—à–µ–ª –∏–ª–∏ –±—ã–ª –∫–∏–∫–Ω—É—Ç
  bot.on('chat_member', async (msg) => {   // ‚Üê –¥–æ–±–∞–≤–∏–ª async
    try {
      console.log('chat member');
      const chatTitle = msg.chat.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
      const oldStatus = msg.old_chat_member.status;
      const newStatus = msg.new_chat_member.status;

      // –ë—ã–ª —É—á–∞—Å—Ç–Ω–∏–∫–æ–º ‚Üí —Å—Ç–∞–ª "left" –∏–ª–∏ "kicked"
      const wasMember = ['member', 'restricted'].includes(oldStatus);
      const nowLeft = ['left', 'kicked'].includes(newStatus);

      if (!wasMember || !nowLeft) return;

      const user = msg.new_chat_member.user;
     
      const name = user.username
        ? `@${user.username}`
        : `${user.first_name} ${user.last_name || ''}`.trim();

      // –µ—Å–ª–∏ username –µ—Å—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ tag
      const tag = user.username ? `@${user.username}` : null;
     console.log(tag);
      // getPlayerDescription async ‚Üí –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å await
      const player = tag ? await getPlayerDescription(tag) : null;
      console.log(player);

      const message =
        `üö™ –í—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã "${chatTitle}": ${name}` +
        (player ? `\n–ù–∏–∫: ${player.nick}\n–ö–ª–∞–Ω: ${player.clan}` : '');

      try {
        await bot.sendMessage(notifyChatId, message, {
          reply_to_message_id: threadMessageId, // –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π
         // allow_sending_without_reply: true
        });
      } catch (err) {
       // console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ notifyChatId:', err.description || err.message);
      }


    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ chat_member:', error);
    }
  });


};
