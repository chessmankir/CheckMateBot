const fs = require('fs');
const path = require('path');

function listFiles(bot) {
  bot.onText(/\/files/, (msg) => {
    const chatId = msg.chat.id;
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      const items = fs.readdirSync('.', { withFileTypes: true });
      
      let message = 'üìÅ *–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞:*\n\n';
      
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–ø–∫–∏
      const folders = items.filter(item => item.isDirectory() && !item.name.startsWith('.'));
      const files = items.filter(item => item.isFile() && !item.name.startsWith('.'));
      
      if (folders.length > 0) {
        message += 'üìÇ *–ü–∞–ø–∫–∏:*\n';
        folders.forEach(folder => {
          message += `  ‚îî üìÅ ${folder.name}\n`;
        });
        message += '\n';
      }
      
      if (files.length > 0) {
        message += 'üìÑ *–§–∞–π–ª—ã:*\n';
        files.forEach(file => {
          const ext = path.extname(file.name);
          let icon = 'üìÑ';
          
          // –í—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
          if (ext === '.js') icon = '‚ö°';
          else if (ext === '.json') icon = '‚öôÔ∏è';
          else if (ext === '.md') icon = 'üìù';
          else if (ext === '.png' || ext === '.jpg' || ext === '.jpeg') icon = 'üñºÔ∏è';
          
          message += `  ‚îî ${icon} ${file.name}\n`;
        });
      }
      
      bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤.');
    }
  });
  
  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞–ø–∫–∏
  bot.onText(/\/folder (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const folderName = match[1];
    
    try {
      const folderPath = path.join('.', folderName);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
      if (!fs.existsSync(folderPath) || !fs.statSync(folderPath).isDirectory()) {
        bot.sendMessage(chatId, `‚ùå –ü–∞–ø–∫–∞ "${folderName}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
        return;
      }
      
      const items = fs.readdirSync(folderPath, { withFileTypes: true });
      
      let message = `üìÅ *–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ "${folderName}":*\n\n`;
      
      if (items.length === 0) {
        message += 'üö´ –ü–∞–ø–∫–∞ –ø—É—Å—Ç–∞';
      } else {
        items.forEach(item => {
          if (item.isDirectory()) {
            message += `  ‚îî üìÅ ${item.name}/\n`;
          } else {
            const ext = path.extname(item.name);
            let icon = 'üìÑ';
            
            if (ext === '.js') icon = '‚ö°';
            else if (ext === '.json') icon = '‚öôÔ∏è';
            else if (ext === '.md') icon = 'üìù';
            else if (ext === '.png' || ext === '.jpg' || ext === '.jpeg') icon = 'üñºÔ∏è';
            
            message += `  ‚îî ${icon} ${item.name}\n`;
          }
        });
      }
      
      bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏:', error);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏.');
    }
  });
}

module.exports = listFiles;