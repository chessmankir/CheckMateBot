const SHEET_NAME = 'Clan';

async function getSheetData(auth, SPREADSHEET_ID) {
  const { google, displayvideo_v1beta } = require('googleapis');
  const sheets = google.sheets({ version: 'v4', auth });
  const response = await sheets.spreadsheets.values.get({
    spreadsheetId: SPREADSHEET_ID,
    range: `${SHEET_NAME}!A2:G`,
  });

  return response.data.values || [];
}

module.exports = function (bot,  auth, SPREADSHEET_ID) {
  bot.onText(/!–ø–æ–∏—Å–∫\s+(.+)/i, async (msg, match) => {
    const chatId = msg.chat.id;
    const query = match[1].trim().toLowerCase();

    try {
      const rows = await getSheetData(auth, SPREADSHEET_ID);

      let row = rows.find(r => (r[1] || '').toLowerCase() === query); // username
      if (!row) row = rows.find(r => (r[3] || '').toLowerCase() === query); // pubg_id
      if (!row) row = rows.find(r => (r[2] || '').toLowerCase() === query); // name

      if (!row) {
        return bot.sendMessage(chatId, `‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –Ω–µ –Ω–∞–π–¥–µ–Ω.`, {
          reply_to_message_id: msg.message_id
        });
      }
      
      const name = row[0] || '(–Ω–µ—Ç —Ç–µ–≥–∞)';
      const nick = row[1] || '(–Ω–µ—Ç –∏–º–µ–Ω–∏)';
      const tag = row[2] || ' –Ω–µ—Ç —Ç–µ–≥–∞'
      const pubgId = row[3] || '(–Ω–µ—Ç PUBG ID)';
      const age = row[4] || '(–≤–æ–∑—Ä–∞—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω)';
      const city = row[5] || '(–≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω)';
      const clan = row[6] || '(–∫–ª–∞–Ω –Ω–µ —É–∫–∞–∑–∞–Ω)';

      const message = `üìÑ –ù–∞–π–¥–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫: ${tag}\n\nüë§ –ò–º—è: ${name}\nüßæ –ù–∏–∫: ${nick}\nüÜî PUBG ID: ${pubgId}\nüìÖ –í–æ–∑—Ä–∞—Å—Ç: ${age}\nüìç –ì–æ—Ä–æ–¥: ${city}\nüè∞ –ö–ª–∞–Ω: ${clan}`;
      bot.sendMessage(chatId, message, {
        reply_to_message_id: msg.message_id
      });

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞:', err);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞.', {
        reply_to_message_id: msg.message_id
      });
    }
  });
};
