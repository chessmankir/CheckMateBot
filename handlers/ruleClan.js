const db = require('./db'); // –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL

const isAdminChat = require('../admin/permissionAdminChat');
const isAllowedChat = require('./../admin/permissionChats');
const getClanId = require('../clan/getClanId');

module.exports = function (bot) {
  // !+–ø—Ä–∞–≤–∏–ª–∞1 <—Ç–µ–∫—Å—Ç>
  bot.onText(/^\+–ø—Ä–∞–≤–∏–ª–∞\s+([\s\S]+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    if (!isAdminChat(chatId)) return;

    const content = (match?.[1] || '').trim();
    if (!content) {
      return bot.sendMessage(chatId, '‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç –ø—Ä–∞–≤–∏–ª.');
    }

    try {
      const clanId = Number(await getClanId(chatId));
      if (!Number.isInteger(clanId) || clanId <= 0) {
        return bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞.');
      }

      await db.query(
        `INSERT INTO public.rules (content, clan_id)
         VALUES ($1, $2)
         ON CONFLICT (clan_id) DO UPDATE
         SET content = EXCLUDED.content`,
        [content, clanId]
      );

      await bot.sendMessage(chatId, '‚úÖ –ü—Ä–∞–≤–∏–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.', {
        reply_to_message_id: msg.message_id,
      });
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª:', err);
      await bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª.', {
        reply_to_message_id: msg.message_id,
      });
    }
  });


  // –ø—Ä–∞–≤–∏–ª–∞
    bot.onText(/^\s*–ø—Ä–∞–≤–∏–ª–∞\s*$/i, async (msg) => {

    const chatId = msg.chat.id;
      
   // if (!isAllowedChat(chatId)) return
    const clanId = await getClanId(chatId);
    try {
      const result = await db.query(`SELECT content FROM rules WHERE clan_id = $1`,[clanId]);
      
      if (result.rowCount === 0) {
        return bot.sendMessage(chatId, '‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.',  {
                                reply_to_message_id: msg.message_id,
                              });
      }

      const rulesText = result.rows[0].content;
      bot.sendMessage(chatId, `üìú –ü—Ä–∞–≤–∏–ª–∞:\n\n${rulesText}`,  {
                       reply_to_message_id: msg.message_id,
                     });
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª:', err);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª.',  {
                       reply_to_message_id: msg.message_id,
                     });
    }
  });
};
