const https = require('https');
const isAllowedChat = require('../admin/permissionChats');

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ actor_id
function getUserInfo(botToken, actorId) {
  const chatId = actorId.replace('user', '');
  const url = `https://api.telegram.org/bot${botToken}/getChat?chat_id=${chatId}`;

  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          const json = JSON.parse(data);
          json.ok ? resolve(json.result) : reject(new Error(json.description));
        } catch (err) {
          reject(err);
        }
      });
    }).on('error', (err) => reject(err));
  });
}

// –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleMessage(bot, msg, botToken) {
  const text = msg.text || '';
  const chatId = msg.chat.id;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã !—Ç–µ–≥
  if (text.startsWith('!—Ç–µ–≥')) {
    const parts = text.trim().split(' ');
    const actorId = parts[1];

    if (!actorId || !actorId.startsWith('user')) {
      return bot.sendMessage(chatId, '‚ùó –ò—Å–ø–æ–ª—å–∑—É–π: !—Ç–µ–≥ user123456789', {reply_to_message_id: msg.message_id });
    }

    try {
      const user = await getUserInfo(botToken, actorId);
      const name = user.first_name || '';
      const username = user.username ? `@${user.username}` : '‚õîÔ∏è –Æ–∑–µ—Ä–Ω–µ–π–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
      return bot.sendMessage(chatId, `üë§ ${name} ${username}`,  
                {reply_to_message_id: msg.message_id });
    } catch (error) {
      return bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: ${error.message}`, {reply_to_message_id: msg.message_id } );
    }
  }

  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –±—É–¥—É—â–µ–º:
  // if (text.startsWith('!–∏–Ω–≤–∞–π—Ç')) { ... }
}

module.exports = handleMessage;
