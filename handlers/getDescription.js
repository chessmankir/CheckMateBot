const getPlayerDescription = require('./../db/getDescriptionDb');
const isAllowedChat = require('./../admin/permissionChats');

function escapeMarkdown(text) {
  if (!text) return '‚Äî';
  return text
    .replace(/_/g, '\\_')
    .replace(/\*/g, '\\*')
    .replace(/`/g, '\\`')
    .replace(/\[/g, '\\[');
}

module.exports = function (bot) {
  // —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ "!–æ–ø–∏—Å–∞–Ω–∏–µ", "!–û–ø–∏—Å–∞–Ω–∏–µ", "!–û–ü–ò–°–ê–ù–ò–ï" –∏ —Ç.–ø.
  bot.onText(/^–æ–ø–∏—Å–∞–Ω–∏–µ(?:\s+@(\S+))?$/iu, async (msg, match) => {
    const chatId = msg.chat.id;
    // if (!isAllowedChat(chatId)) return;

    try {
      // 1) –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π @ –≤ –∫–æ–º–∞–Ω–¥–µ
      const explicitTag = match[1] ? `@${match[1]}` : null;

      // 2) –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ –æ—Ç–≤–µ—Ç ‚Äî –±–µ—Ä—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ reply
      const repliedUser = msg.reply_to_message?.from || null;

      // 3) –ê–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã
      const author = msg.from;

      // --- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: actorId ---
      const actorId = repliedUser?.id ?? author?.id ?? null;

      // –ï—Å–ª–∏ actorId –Ω–µ—Ç ‚Äî fallback –Ω–∞ username/explicitTag
      const requestedUsername =
        actorId
          ? null
          : explicitTag ||
            (repliedUser?.username ? `@${repliedUser.username}` : null) ||
            (author?.username ? `@${author.username}` : null);

      if (!requestedUsername && !actorId) {
        return bot.sendMessage(
          chatId,
          '‚ùó –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç username. –£–∫–∞–∂–∏ @username —è–≤–Ω–æ: `!–æ–ø–∏—Å–∞–Ω–∏–µ @user`',
          { reply_to_message_id: msg.message_id, parse_mode: 'Markdown' }
        );
      }

      console.log('requestedUsername:', requestedUsername);

      // –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –ë–î: —Å–Ω–∞—á–∞–ª–∞ actorId, –ø–æ—Ç–æ–º username
      const key = actorId ? String(actorId) : requestedUsername;
      console.log('DB key:', key);

      const player = await getPlayerDescription(key);

      if (!player) {
        return bot.sendMessage(
          chatId,
          `‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è ${requestedUsername || `ID ${actorId}`} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`,
          { reply_to_message_id: msg.message_id }
        );
      }

      const pubgId = player.pubgId != null ? String(player.pubgId) : '';

      const text = `
üßæ –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ ${escapeMarkdown(requestedUsername || `ID ${actorId}`)}:

üë§ –ò–º—è: ${escapeMarkdown(player.name)}
üè∑ –ù–∏–∫: ${escapeMarkdown(player.nick)}
üéÆ PUBG ID: \`${escapeMarkdown(pubgId) || '‚Äî'}\`
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${escapeMarkdown(player.age)}
üìç –ì–æ—Ä–æ–¥: ${escapeMarkdown(player.city)}
      `.trim();

      await bot.sendMessage(chatId, text, {
        parse_mode: 'Markdown',
        reply_to_message_id: msg.message_id,
        reply_markup: {
          inline_keyboard: pubgId
            ? [[{ text: 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å PUBG ID', copy_text: { text: pubgId } }]]
            : []
        }
      });

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã:', error);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è.', {
        reply_to_message_id: msg.message_id
      });
    }
  });
};

