// modules/cmd.description.js
const pool = require('../handlers/db');

// —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è HTML
function esc(s = '') {
  return String(s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
}

// —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç –ø–æ @—Ç–µ–≥—É –∏–ª–∏ actor_id
async function loadPlayer(client, { tag, actorId }) {
  // –µ—Å–ª–∏ –µ—Å—Ç—å @—Ç–µ–≥ ‚Äî –ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–æ –Ω–µ–º—É
  if (tag) {
    const byTag = await client.query(`
      SELECT name, nickname, pubg_id, age, city, telegram_tag, actor_id
      FROM clan_members
      WHERE telegram_tag = $1
      ORDER BY id DESC
      LIMIT 1
    `, [tag]);
    if (byTag.rows.length) return byTag.rows[0];
  }
  // —Ñ–æ–ª–±—ç–∫: –ø–æ actor_id
  if (actorId) {
    const byId = await client.query(`
      SELECT name, nickname, pubg_id, age, city, telegram_tag, actor_id
      FROM clan_members
      WHERE actor_id = $1
      ORDER BY id DESC
      LIMIT 1
    `, [actorId]);
    if (byId.rows.length) return byId.rows[0];
  }
  return null;
}

module.exports = function (bot) {
  // —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ "–æ–ø–∏—Å–∞–Ω–∏–µ" –∏–ª–∏ "!–æ–ø–∏—Å–∞–Ω–∏–µ" + –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ @—Ç–µ–≥
  bot.onText(/^!?–æ–ø–∏—Å–∞–Ω–∏[–µ—ë](?:\s+@(\S+))?$/iu, async (msg, match) => {
    const chatId = msg.chat.id;

    // 1) —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π @—Ç–µ–≥
    const explicitTag = match[1] ? `@${match[1]}` : null;

    // 2) –µ—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –±–µ—Ä—ë–º —Ç–æ–≥–æ, –Ω–∞ –∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∏–ª–∏
    const repliedUser = msg.reply_to_message?.from || null;

    // 3) –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã (–∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    const author = msg.from;

    // —Å–æ–±–∏—Ä–∞–µ–º —Ü–µ–ª—å
    const target = {
      tag: explicitTag
        || (repliedUser?.username ? `@${repliedUser.username}` : null)
        || (author?.username ? `@${author.username}` : null),
      actorId: explicitTag
        ? null                                  // –µ—Å–ª–∏ —è–≤–Ω—ã–π —Ç–µ–≥ ‚Äî actorId –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
        : (repliedUser?.id ?? author?.id ?? null)
    };

    if (!target.tag && !target.actorId) {
      return bot.sendMessage(chatId, '‚ùóÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ—Ç username –∏ actor_id).');
    }

    const client = await pool.connect();
    try {
      const player = await loadPlayer(client, target);
      if (!player) {
        return bot.sendMessage(chatId, '‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.', {
          reply_to_message_id: msg.message_id
        });
      }

      // —Å–±–æ—Ä–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
      const title = `üßæ –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ ${esc(player.telegram_tag || '')}:`;
      const lines = [
        `üë§ –ò–º—è: ${esc(player.name || '‚Äî')}`,
        `üè∑Ô∏è –ù–∏–∫: ${esc(player.nickname || '‚Äî')}`,
        `üéÆ PUBG ID: ${esc(player.pubg_id || '‚Äî')}`,
        `üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${esc(player.age != null ? String(player.age) : '‚Äî')}`,
        `üìç –ì–æ—Ä–æ–¥: ${esc(player.city || '‚Äî')}`,
      ];

      const text = `${title}\n\n${lines.join('\n')}`;

      await bot.sendMessage(chatId, text, {
        parse_mode: 'HTML',
        reply_to_message_id: msg.message_id,
      });
    } catch (e) {
      console.error('!–æ–ø–∏—Å–∞–Ω–∏–µ error:', e);
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è.', {
        reply_to_message_id: msg.message_id
      });
    } finally {
      client.release();
    }
  });
};
