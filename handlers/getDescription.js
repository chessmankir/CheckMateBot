// modules/cmd.description.js
// helper: —Ä–µ–∞–ª—å–Ω—ã–π –ª–∏ —Ä–µ–ø–ª–∞–π —á–µ–ª–æ–≤–µ–∫—É, –∞ –Ω–µ —à–∞–ø–∫–µ/–±–æ—Ç—É/–∫–∞–Ω–∞–ª—É
const getPlayerDescription = require('./../db/getDescriptionDb');
const isAllowedChat = require('./../admin/permissionChats');

function escapeMarkdown(text) {
  if (!text) return '‚Äî';
  return text
    .replace(/_/g, '\\_')
    .replace(/\*/g, '\\*')
    .replace(/`/g, '\\`')
    .replace(/\[/g, '\\[');
}

// —Ä–µ–∞–ª—å–Ω—ã–π –ª–∏ —Ä–µ–ø–ª–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–∞ –Ω–µ —à–∞–ø–∫–µ/–±–æ—Ç—É/–∫–∞–Ω–∞–ª—É)
function isRealUserReply(msg) {
  const r = msg.reply_to_message;
  console.log(r);
  if (!r) return false;
  console.log('1');
  if (!r.from || r.from.is_bot) return false;          // –Ω–µ –±–æ—Ç
  console.log('2');
/*  if (r.is_topic_message || r.forum_topic_created) return false; */
  console.log('3');
  if (r.sender_chat) return false;                      // –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–Ω–∞–ª/—á–∞—Ç
  console.log('4');
  /*if (typeof msg.message_thread_id === 'number' && r.message_id === msg.message_thread_id) {
    console.log('5');
    // –º–Ω–æ–≥–∏–µ –∫–ª–∏–µ–Ω—Ç—ã —Å—Ç–∞–≤—è—Ç reply –Ω–∞ ¬´—à–∞–ø–∫—É¬ª —Å id == thread_id
    return false;
  }*/
  return true;
}

module.exports = function (bot) {
  bot.onText(/^–æ–ø–∏—Å–∞–Ω–∏–µ(?:\s+@(\S+))?$/iu, async (msg, match) => {
    const chatId = msg.chat.id;
    // if (!isAllowedChat(chatId)) return;

    try {
      const explicitTag = match[1] ? `@${match[1]}` : null;
      const author = msg.from;

      let actorId = null;            // –∫–ª—é—á ‚Ññ1
      let requestedUsername = null;  // –∫–ª—é—á ‚Ññ2 (–µ—Å–ª–∏ –Ω–µ—Ç actorId)

      // 1) –Ø–≤–Ω—ã–π @ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å
      if (explicitTag) {
        console.log('explicitTag');
        requestedUsername = explicitTag;
      } else if (isRealUserReply(msg)) {
        console.log('isRealUserReply');
        // 2) –†–µ–∞–ª—å–Ω—ã–π —Ä–µ–ø–ª–∞–π ‚Äî –±–µ—Ä—ë–º id –∞–¥—Ä–µ—Å–∞—Ç–∞
        actorId = msg.reply_to_message.from.id;
      } else {
        // 3) –†–µ–ø–ª–∞—è –Ω–µ—Ç ‚Äî –±–µ—Ä—ë–º –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
        console.log('actor');
        actorId = author?.id ?? null;
      }
      
      if (!requestedUsername && !actorId) {
        return bot.sendMessage(
          chatId,
          '‚ùó –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç username. –£–∫–∞–∂–∏ @username —è–≤–Ω–æ: `!–æ–ø–∏—Å–∞–Ω–∏–µ @user`',
          { reply_to_message_id: msg.message_id, parse_mode: 'Markdown' }
        );
      }

      // –ö–ª—é—á –ø–æ–∏—Å–∫–∞: –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç actorId
      const key = actorId ? String(actorId) : requestedUsername;
      console.log(key);
      const player = await getPlayerDescription(key);

      if (!player) {
        return bot.sendMessage(
          chatId,
          `‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è ${requestedUsername || `ID ${actorId}`} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`,
          { reply_to_message_id: msg.message_id }
        );
      }

      const pubgId = player.pubgId != null ? String(player.pubgId) : '';
      // —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ (–µ—Å–ª–∏ –∏—Å–∫–∞–ª–∏ –ø–æ ID ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ID)
      const subjectForText = actorId ? `ID ${actorId}` : requestedUsername;

      const text = `
üßæ –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ ${escapeMarkdown(subjectForText)}:

üë§ –ò–º—è: ${escapeMarkdown(player.name)}
üè∑ –ù–∏–∫: ${escapeMarkdown(player.nick)}
üéÆ PUBG ID: \`${escapeMarkdown(pubgId) || '‚Äî'}\`
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${escapeMarkdown(player.age)}
üìç –ì–æ—Ä–æ–¥: ${escapeMarkdown(player.city)}
      `.trim();

      await bot.sendMessage(chatId, text, {
        parse_mode: 'Markdown',
        reply_to_message_id: msg.message_id,
        reply_markup: {
          inline_keyboard: pubgId
            ? [[{ text: 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å PUBG ID', copy_text: { text: pubgId } }]]
            : []
        }
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã:', error);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è.', {
        reply_to_message_id: msg.message_id
      });
    }
  });
};
