const getPlayerDescription = require('./../db/getDescriptionDb');
const isAllowedChat = require('./../admin/permissionChats');

function escapeMarkdown(text) {
  if (!text) return '‚Äî';
  return text
    .replace(/_/g, '\\_')
    .replace(/\*/g, '\\*')
    .replace(/`/g, '\\`')
    .replace(/\[/g, '\\[');
}

module.exports = function (bot) {
  // —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ "–æ–ø–∏—Å–∞–Ω–∏–µ" (–±–µ–∑ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –ø–æ —Ç–≤–æ–µ–º—É –∫–æ–¥—É)
  bot.onText(/^–æ–ø–∏—Å–∞–Ω–∏–µ(?:\s+@(\S+))?$/iu, async (msg, match) => {
    const chatId = msg.chat.id;
    // if (!isAllowedChat(chatId)) return;

    try {
      const explicitTag = match[1] ? `@${match[1]}` : null;

      const replied = msg.reply_to_message || null;
      const author  = msg.from;

      // –í–µ—Ç–∫–∞/—Ñ–æ—Ä—É–º –¥–∞—ë—Ç "–ª–æ–∂–Ω—ã–π —Ä–µ–ø–ª–∞–π" –∫ —à–∞–ø–∫–µ —Ç–µ–º—ã.
      // –°—á–∏—Ç–∞–µ–º —Ä–µ–ø–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ù–ï —à–∞–ø–∫–∞/—Å–µ—Ä–≤–∏—Å–Ω–æ–µ –∏ –Ω–µ –±–æ—Ç.
      const isRealReply =
        !!replied &&
        !replied.is_topic_message &&
        !replied.forum_topic_created &&
        !replied.sender_chat &&                       // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–Ω–∞–ª
        replied.from && !replied.from.is_bot &&
        replied.message_id !== msg.message_thread_id; // —á–∞—Å—Ç–æ —à–∞–ø–∫–∞ –∏–º–µ–µ—Ç id = thread_id

      let actorId = null;
      let requestedUsername = null;

      if (isRealReply) {
        // –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–ø–ª–∞–π
        if (explicitTag) {
          requestedUsername = explicitTag;            // —è–≤–Ω—ã–π @ –≤–∞–∂–Ω–µ–µ
        } else {
          actorId = replied.from.id;                  // –∏—â–µ–º –ø–æ id —Ç–æ–≥–æ, –Ω–∞ –∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∏–ª–∏
          requestedUsername = replied.from.username
            ? `@${replied.from.username}`
            : null;
        }
      } else {
        // —Ä–µ–ø–ª–∞—è –Ω–µ—Ç (–∏–ª–∏ –æ–Ω "–ª–æ–∂–Ω—ã–π")
        if (explicitTag) {
          requestedUsername = explicitTag;            // –∏—â–µ–º –ø–æ —è–≤–Ω–æ–º—É @
        } else {
          actorId = author.id;                        // –∏–Ω–∞—á–µ –ø–æ –∞–≤—Ç–æ—Ä—É –∫–æ–º–∞–Ω–¥—ã
          requestedUsername = author.username
            ? `@${author.username}`
            : null;
        }
      }

      if (!requestedUsername && !actorId) {
        return bot.sendMessage(
          chatId,
          '‚ùó –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç username. –£–∫–∞–∂–∏ @username —è–≤–Ω–æ: `!–æ–ø–∏—Å–∞–Ω–∏–µ @user`',
          { reply_to_message_id: msg.message_id, parse_mode: 'Markdown' }
        );
      }

      const key = actorId ? String(actorId) : requestedUsername;
      const player = await getPlayerDescription(key);

      if (!player) {
        return bot.sendMessage(
          chatId,
          `‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è ${requestedUsername || `ID ${actorId}`} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`,
          { reply_to_message_id: msg.message_id }
        );
      }

      const pubgId = player.pubgId != null ? String(player.pubgId) : '';

      const text = `
üßæ –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ ${escapeMarkdown(requestedUsername || `ID ${actorId}`)}:

üë§ –ò–º—è: ${escapeMarkdown(player.name)}
üè∑ –ù–∏–∫: ${escapeMarkdown(player.nick)}
üéÆ PUBG ID: \`${escapeMarkdown(pubgId) || '‚Äî'}\`
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${escapeMarkdown(player.age)}
üìç –ì–æ—Ä–æ–¥: ${escapeMarkdown(player.city)}
      `.trim();

      await bot.sendMessage(chatId, text, {
        parse_mode: 'Markdown',
        reply_to_message_id: msg.message_id,
        reply_markup: {
          inline_keyboard: pubgId
            ? [[{ text: 'üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å PUBG ID', copy_text: { text: pubgId } }]]
            : []
        }
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑ –±–∞–∑—ã:', error);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è.', {
        reply_to_message_id: msg.message_id
      });
    }
  });
};
