const db = require('./db');
const fs = require('fs');
const saveDescription = require('./saveDescriptionFunc');
const isAllowedChat = require('../admin/permissionChats');
const saveMemberDb = require('./saveMemberDb');

const usersInProcess = new Map();

module.exports = function(bot, notifyChatId, inviteLink1, inviteLink2) {
  // –ö–æ–º–∞–Ω–¥–∞ /join

  bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    console.log('start');
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    const welcomeText = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ Checkmate! ‚ôüÔ∏è';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    bot.sendPhoto(chatId, fs.readFileSync('./Images/IMG_3371.png'), {
      caption: welcomeText,
      filename: 'welcome_image.png',
      reply_markup: {
        inline_keyboard: [
          [
            { text: '–¢–≥–∫ ChessmanKir üß©', url: 'https://t.me/chessmankirLive' },
            { text: '–ù–æ–≤–æ—Å—Ç–∏ Pubg ü§ù', url: 'https://t.me/winepubgm' }
          ],
          [
            { text: '–•–æ—á–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω?', callback_data: 'join_clan' }
          ]
        ]
      }
    });
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
  bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;
    const userId = query.from.id;

    if (query.data === 'join_clan') {
      bot.sendMessage(chatId, '–¢—ã —Ö–æ—á–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω?', {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '–î–∞ ‚úÖ', callback_data: 'join_yes' },
              { text: '–ù–µ—Ç ‚ùå', callback_data: 'join_no' }
            ]
          ]
        }
      });
    }

    if (query.data === 'join_no') {
      return bot.sendMessage(chatId, '–•–æ—Ä–æ—à–æ, –º–æ–∂–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ üòä', {
        reply_to_message_id: query.message.message_id,
      });
    }

    if (query.data === 'join_yes') {
      usersInProcess.set(userId, { step: 'invite', data: {} });
      bot.sendMessage(chatId, '–í–≤–µ–¥–∏ —Å–≤–æ–π –∏–Ω–≤–∞–π—Ç-–∫–æ–¥:', {
        reply_to_message_id: query.message.message_id,
      });
    }
  });

  // –ü–æ—à–∞–≥–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞
  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const text = msg.text?.trim();

    if (!text || text.startsWith('/')) return;
    if (!usersInProcess.has(userId)) return;

    const user = usersInProcess.get(userId);

    // –®–∞–≥ 1 ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–≤–∞–π—Ç–∞
    if (user.step === 'invite') {
      const code = text;
      const res = await db.query(
        'SELECT * FROM invites WHERE invite_code = $1 AND is_active = true',
        [code]
      );
      if (res.rowCount === 0) {
        return bot.sendMessage(chatId, '‚ùå –ö–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω. –í–≤–µ–¥–∏ —Å–Ω–æ–≤–∞:');
      }

      user.data.inviteCode = code;
      user.data.clan = res.rows[0].clan_name;
      user.step = 'pubg_id';
      return bot.sendMessage(chatId, '‚úÖ –ö–æ–¥ –ø—Ä–∏–Ω—è—Ç. –í–≤–µ–¥–∏ —Å–≤–æ–π PUBG ID:');
    }

    // –®–∞–≥ 2 ‚Äî PUBG ID
    if (user.step === 'pubg_id') {
      user.data.pubg_id = text;
      user.step = 'name';
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:');
    }

    // –®–∞–≥ 3 ‚Äî –∏–º—è
    if (user.step === 'name') {
      user.data.name = text;
      user.step = 'nick';
      return bot.sendMessage(chatId, '–í–≤–µ–¥–∏ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫');
    }

    if (user.step === 'nick') {
      user.data.nick = text;
      user.step = 'age';
      return bot.sendMessage(chatId, '–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?');
    }

    // –®–∞–≥ 4 ‚Äî –≤–æ–∑—Ä–∞—Å—Ç
    if (user.step === 'age') {
      user.data.age = text;
      user.step = 'city';
      return bot.sendMessage(chatId, '–ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?');
    }

    // –®–∞–≥ 5 ‚Äî –≥–æ—Ä–æ–¥ ‚Üí —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    if (user.step === 'city') {
      user.data.city = text;

      const dataToSave = {
        name: user.data.name,
        nick: user.data.nick || '',
        target_username: "@" + msg.from.username || '',
        pubg_id: user.data.pubg_id,
        age: user.data.age,
        city: user.data.city,
        clan: user.data.clan,
        actor_id: userId,
        date: 0,
      };

      try {
        await saveDescription(dataToSave);
        await db.query('UPDATE invites SET is_active = false WHERE invite_code = $1', [
          user.data.inviteCode
        ]);
        await saveMemberDb(dataToSave);

        await bot.sendMessage(chatId, 'üéâ –¢—ã –ø—Ä–∏–Ω—è—Ç –≤ –∫–ª–∞–Ω! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∞–Ω CheckMate‚ôüÔ∏è'); 
        
        if (dataToSave.clan == 1 || dataToSave.clan == 2){
          await bot.sendMessage(chatId, inviteLink1 );
        }
        else{
          await bot.sendMessage(chatId, inviteLink2 );
        }
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—ë–º–µ –≤ –∫–ª–∞–Ω:', err.message);
        await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.');
      }

      usersInProcess.delete(userId);
    }
  });
};