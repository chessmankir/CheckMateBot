// modules/register/existingProfileCallback.js
/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞.
 * 
 * –°—Ü–µ–Ω–∞—Ä–∏–∏:
 *  - "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" ‚Üí –ø–µ—Ä–µ–Ω–æ—Å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π.
 *  - "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å" ‚Üí –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —Å –≤–≤–æ–¥–æ–º –∏–º–µ–Ω–∏/–Ω–∏–∫–∞.
 */
const registerClan = require("./registerClanDb");
const getPlayerDescription = require('./../db/getDescriptionDb');
const deactivateOwnerClans = require("../clan/deactivateOwnerClans");
const { chat } = require("googleapis/build/src/apis/chat");


module.exports = function handleExistingProfileCallback(bot, wizardState) {
  bot.on('callback_query', async (q) => {
    const userId = q.from.id;
    const s = wizardState.get(userId);
    if (!s) return;
    const chatId = q.message.chat.id;
    if (s.step === 'confirm_existing_profile') {
      if (q.data === 'use_existing_continue') {    
        // —Ä–µ–∂–∏–º: –ø–µ—Ä–µ–Ω–æ—Å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
        s.payload.useExistingMode = 'reuse';
        s.step = 'finalize_registration'; // –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —à–∞–≥—É
        wizardState.set(userId, s);
        const p = s.payload;
        const player = await getPlayerDescription(p.leaderId);
        p.leader_name = player.name;
        p.leader_nick = player.nick;
        p.leader_pubg_id = player.pubgId;
        p.leader_age = player.age;
        p.leader_city = player.city;
        p.updatePlayer = true;
        let telegramTag = null;
        if (q.from.username) {
          telegramTag = '@' + q.from.username.trim();
        }
        await bot.answerCallbackQuery(q.id, { text: '–ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å.' });
        await bot.sendMessage(q.message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∞—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–ª–∞–Ω–∞‚Ä¶');
        
        try {

          await registerClan(p.clan_name, userId, telegramTag, p, wizardState);
          await deactivateOwnerClans(userId);
          await bot.sendMessage(
            chatId,
            [
              `üéâ –ö–ª–∞–Ω ¬´${p.clan_name}¬ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`,
              `üëë –õ–∏–¥–µ—Ä: ${p.leader_name} (${p.leader_nick}), PUBG ID: ${p.leader_pubg_id}, ${p.leader_age} –ª–µ—Ç, ${p.leader_city}.`,
              "",
              "–î–∞–ª—å—à–µ:",
              "1) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–∞–¥–º–∏–Ω-—á–∞—Ç**, –≤—ã–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∞–º: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–¥–º–∏–Ω–∫—É`.",
              "2) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–æ–±—ã—á–Ω—ã–µ** —á–∞—Ç—ã –∫–ª–∞–Ω–∞ –∏ –≤ –∫–∞–∂–¥–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç`.",
            ].join("\n"),
            { parse_mode: "Markdown" },
          );

          wizardState.delete(userId);
        } catch (err) {
          try {
            await db.query("ROLLBACK");
          } catch (_) {}
          console.error("register clan FINAL error", {
            code: err.code,
            constraint: err.constraint,
            table: err.table,
            detail: err.detail,
          });
          if (err && err.code === "23505") {
            return bot.sendMessage(
              chatId,
              "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.",
            );
          }
          console.error("register clan FINAL error", err);
          bot.sendMessage(
            msg.chat.id,
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
          );
          wizardState.delete(userId);
        }
        return;
      }

      if (q.data === 'use_existing_edit') {
        console.log('edit');
        // —Ä–µ–∂–∏–º: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ (–æ–±–Ω–æ–≤–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å)
        s.payload.useExistingMode = 'edit';
        s.payload.updateExisting = true; // –≤–∞–∂–Ω—ã–π —Ñ–ª–∞–≥
        s.step = 'ask_leader_name';      // –ø—Ä–æ–¥–æ–ª–∂–∏–º –∫–∞–∫ –æ–±—ã—á–Ω–æ (–∏–º—è ‚Üí –Ω–∏–∫ ‚Üí ‚Ä¶)
        wizardState.set(userId, s);

        await bot.answerCallbackQuery(q.id);
        await bot.sendMessage(q.message.chat.id, 'üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è (–∫–∞–∫ –∑–æ–≤—É—Ç).');
        return;
      }
    }
  });
};
