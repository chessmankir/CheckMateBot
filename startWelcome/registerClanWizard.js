const db = require("../handlers/db");
const getPlayerDescription = require('./../db/getDescriptionDb');
const createSubclan = require("../clan/createSubClanDb");
const registerCallback = require("./registerCallback");
const registerClan = require("./registerClanDb");
const deactivateOwnerClans = require("../clan/deactivateOwnerClans");

const FALLBACK_CODE = process.env.CLAN_VERIFY_CODE || "417";
const wizardState = new Map();

function escapeMarkdown(text) {
  if (!text) return '‚Äî';
  return text
    .replace(/_/g, '\\_')
    .replace(/\*/g, '\\*')
    .replace(/`/g, '\\`')
    .replace(/\[/g, '\\[');
}

// ===== –£—Ç–∏–ª–∏—Ç—ã =====
function normText(s) {
  return (s || "").toString().trim();
}
function normDigits(s) {
  return (s || "").toString().replace(/\D+/g, "");
}
function toIntOrNull(s) {
  const n = parseInt((s || "").toString().trim(), 10);
  return Number.isFinite(n) ? n : null;
}
/** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π username (–±–µ–∑ @) –∏–ª–∏ null */
function getValidUsername(from) {
  const u = from && from.username ? String(from.username).trim() : "";
  // Telegram username: 5..32 —Å–∏–º–≤–æ–ª–æ–≤ [A-Za-z0-9_]
  if (/^[A-Za-z0-9_]{5,32}$/.test(u)) return u;
  return null;
}

module.exports = function registerClanWizard(bot) {
  registerCallback(bot, wizardState);
  // ===== 1) –ö–Ω–æ–ø–∫–∞ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω" =====
  bot.on("callback_query", async (q) => {
    if (!q?.data || q.data !== "register_clan") return;
    if (q.message.chat.type !== "private") {
      return bot.answerCallbackQuery(q.id, {
        text: "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ –±–æ—Ç–∞.",
      });
    }

    const chatId = q.message.chat.id;
    const userId = q.from.id;

    // ‚úÖ –¢—Ä–µ–±—É–µ–º –Ω–∞–ª–∏—á–∏–µ username –¥–æ —Å—Ç–∞—Ä—Ç–∞ –º–∞—Å—Ç–µ—Ä–∞
    const uname = getValidUsername(q.from);
    if (!uname) {
      await bot.answerCallbackQuery(q.id, {
        text: "–ù—É–∂–µ–Ω username –≤ Telegram.",
        show_alert: true,
      });
      return bot.sendMessage(
        chatId,
        [
          "‚ùó –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∞–Ω–∞ –Ω—É–∂–µ–Ω *username* –≤ Telegram.",
          "",
          "–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:",
          "1) –û—Ç–∫—Ä–æ–π—Ç–µ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏* Telegram.",
          "2) –ù–∞–∂–º–∏—Ç–µ *–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å* ‚Üí *–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*.",
          "3) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–º—è (5‚Äì32 —Å–∏–º–≤–æ–ª–∞: –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, _ ).",
          "",
          "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω¬ª.",
        ].join("\n"),
        { parse_mode: "Markdown" },
      );
    }

    wizardState.set(userId, { step: "ask_clan_name", payload: {} });
    await bot.answerCallbackQuery(q.id);
    await bot.sendMessage(
      chatId,
      '‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Black Knights").',
    );
  });

  // ===== 2) –®–∞–≥–∏ –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –õ–°) =====
  bot.on("message", async (msg) => {
    if (msg.chat.type !== "private") return;
    const userId = msg.from.id;
    const s = wizardState.get(userId);
    if (!s) return;

    const p = s.payload;
    p.updatePlayer = false;

    // 2.1 –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞
    if (s.step === "ask_clan_name") {
      const name = normText(msg.text);
      if (!name) return bot.sendMessage(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.");
      p.clan_name = name;
      s.step = "ask_chat_link";
      return bot.sendMessage(
        msg.chat.id,
        "‚úÖ –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —á–∞—Ç –∫–ª–∞–Ω–∞.",
      );
    }

    if (s.step === "ask_chat_link") {
      const link = normText(msg.text);
      p.clan_link = link;
      s.step = "ask_code";
      return bot.sendMessage(msg.chat.id, "‚úÖ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥.");
    }

    // 2.2 –ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥
    if (s.step === "ask_code") {
      const code = normDigits(msg.text);
      const expected = normDigits(FALLBACK_CODE);
      if (code !== expected) {
        return bot.sendMessage(
          msg.chat.id,
          "–ö–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
        );
      }

      const state = wizardState.get(userId) || { step: null, payload: {} };
      const p = state.payload || (state.payload = {});

      const player = await getPlayerDescription(userId);
      console.log(player);

      if (player) {
        state.step = "confirm_existing_profile"; // —ç—Ç–æ—Ç —à–∞–≥ –Ω—É–∂–µ–Ω –¥–ª—è –∫–Ω–æ–ø–æ–∫
        p.updatePlayer = true;
        p.leaderId = userId;

        const text = [
          "üßæ *–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:*",
          "",
          `üë§ –ò–º—è:  ${escapeMarkdown(player.name)}`,
          `üè∑ –ù–∏–∫:  ${escapeMarkdown(player.nick)}`,
          `üéÆ PUBG ID: \` ${escapeMarkdown(player.pubgId)}\``,
          `üéÇ –í–æ–∑—Ä–∞—Å—Ç:  ${escapeMarkdown(player.age)}`,
          `üìç –ì–æ—Ä–æ–¥:  ${escapeMarkdown(player.city)}`,
          "",
          "*–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ —Å —ç—Ç–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º.*",
          "–•–æ—Ç–∏—Ç–µ *–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å* –∏–ª–∏ *–∏–∑–º–µ–Ω–∏—Ç—å* –¥–∞–Ω–Ω—ã–µ?",
        ].join("\n");

        wizardState.set(userId, state);

        await bot.sendMessage(msg.chat.id, text, {
          parse_mode: "Markdown",
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
                  callback_data: "use_existing_continue",
                },
              ],
              [{ text: "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data: "use_existing_edit" }],
            ],
          },
        });
        return;
      }

      // –µ—Å–ª–∏ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç ‚Äî –∏–¥—ë–º –æ–±—ã—á–Ω—ã–º –ø—É—Ç—ë–º
      state.step = "ask_leader_name";
      wizardState.set(userId, state);
      return bot.sendMessage(msg.chat.id, "üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è (–∫–∞–∫ –∑–æ–≤—É—Ç).");
    }


    // 2.3 –ò–º—è –ª–∏–¥–µ—Ä–∞
    if (s.step === "ask_leader_name") {
      const leaderName = normText(msg.text);
      if (!leaderName) return bot.sendMessage(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è.");
      p.leader_name = leaderName;
      s.step = "ask_leader_nick";
      return bot.sendMessage(msg.chat.id, "üè∑ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ (–≤ –∏–≥—Ä–µ).");
    }

    // 2.4 –ù–∏–∫ –ª–∏–¥–µ—Ä–∞
    if (s.step === "ask_leader_nick") {
      const leaderNick = normText(msg.text);
      if (!leaderNick) return bot.sendMessage(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫.");
      p.leader_nick = leaderNick;
      s.step = "ask_leader_pubg_id";
      return bot.sendMessage(msg.chat.id, "üéÆ –í–≤–µ–¥–∏—Ç–µ PUBG ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).");
    }

    // 2.5 PUBG ID –ª–∏–¥–µ—Ä–∞
    if (s.step === "ask_leader_pubg_id") {
      const pubgId = normDigits(msg.text);
      if (!pubgId)
        return bot.sendMessage(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ PUBG ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).");
      p.leader_pubg_id = pubgId;
      s.step = "ask_leader_age";
      return bot.sendMessage(msg.chat.id, "üéÇ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ).");
    }

    // 2.6 –í–æ–∑—Ä–∞—Å—Ç –ª–∏–¥–µ—Ä–∞
    if (s.step === "ask_leader_age") {
      const age = toIntOrNull(msg.text);
      if (!age || age < 10 || age > 99) {
        return bot.sendMessage(
          msg.chat.id,
          "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (10‚Äì99).",
        );
      }
      p.leader_age = age;
      s.step = "ask_leader_city";
      return bot.sendMessage(msg.chat.id, "üìç –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥.");
    }

    // 2.7 –ì–æ—Ä–æ–¥ –ª–∏–¥–µ—Ä–∞ ‚Üí —Ñ–∏–Ω–∞–ª (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ + –ª–∏–¥–µ—Ä–∞)
    if (s.step === "ask_leader_city") {
      const city = normText(msg.text);
      if (!city)
        return bot.sendMessage(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥.");
      p.leader_city = city;

      const clanName = p.clan_name;

      // üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ username –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é –≤ –ë–î
      const username = getValidUsername(msg.from);
      if (!username) {
        wizardState.delete(userId);
        return bot.sendMessage(
          msg.chat.id,
          [
            "‚ùó –ù–µ–ª—å–∑—è –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚Äî —É –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ *username*.",
            "",
            "–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:",
            "1) –û—Ç–∫—Ä–æ–π—Ç–µ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏* Telegram.",
            "2) *–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è* ‚Üí –∑–∞–¥–∞–π—Ç–µ –∏–º—è (5‚Äì32 —Å–∏–º–≤–æ–ª–∞: –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã, _ ).",
            "",
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞—á–Ω–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.",
          ].join("\n"),
          { parse_mode: "Markdown" },
        );
      }
      const telegramTag = "@" + username;
      console.log(p);
      try {
        await deactivateOwnerClans(userId);
        await registerClan(clanName, userId, telegramTag, p, wizardState); 
        await bot.sendMessage(
          msg.chat.id,
          [
            `üéâ –ö–ª–∞–Ω ¬´${clanName}¬ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`,
            `üëë –õ–∏–¥–µ—Ä: ${p.leader_name} (${p.leader_nick}), PUBG ID: ${p.leader_pubg_id}, ${p.leader_age} –ª–µ—Ç, ${p.leader_city}.`,
            "",
            "–î–∞–ª—å—à–µ:",
            "1) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–∞–¥–º–∏–Ω-—á–∞—Ç**, –≤—ã–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∞–º: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–¥–º–∏–Ω–∫—É`.",
            "2) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–æ–±—ã—á–Ω—ã–µ** —á–∞—Ç—ã –∫–ª–∞–Ω–∞ –∏ –≤ –∫–∞–∂–¥–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç`.",
          ].join("\n"),
          { parse_mode: "Markdown" },
        );

        wizardState.delete(userId);
      } catch (err) {
        try {
          await db.query("ROLLBACK");
        } catch (_) {}
        console.error("register clan FINAL error", {
          code: err.code,
          constraint: err.constraint,
          table: err.table,
          detail: err.detail,
        });
        if (err && err.code === "23505") {
          return bot.sendMessage(
            msg.chat.id,
            "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.",
          );
        }
        console.error("register clan FINAL error", err);
        bot.sendMessage(
          msg.chat.id,
          "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        );
        wizardState.delete(userId);
      }
    }
  });
};
