// modules/registerClanWizard.js
const db = require('../handlers/db');

const FALLBACK_CODE = process.env.CLAN_VERIFY_CODE || '417';
const wizardState = new Map();

// –ø—Ä–æ—Å—Ç—ã–µ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã/–Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ç–æ—Ä—ã
function normText(s) { return (s || '').toString().trim(); }
function normDigits(s) { return (s || '').toString().replace(/\D+/g, ''); }
function toIntOrNull(s) {
  const n = parseInt((s || '').toString().trim(), 10);
  return Number.isFinite(n) ? n : null;
}

module.exports = function registerClanWizard(bot) {
  // ===== 1) –ö–Ω–æ–ø–∫–∞ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω" =====
  bot.on('callback_query', async (q) => {
    if (!q?.data || q.data !== 'register_clan') return;
    if (q.message.chat.type !== 'private') {
      return bot.answerCallbackQuery(q.id, { text: '–†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ –±–æ—Ç–∞.' });
    }

    const chatId = q.message.chat.id;
    const userId = q.from.id;

    wizardState.set(userId, { step: 'ask_clan_name', payload: {} });
    await bot.answerCallbackQuery(q.id);
    await bot.sendMessage(chatId, '‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Black Knights").');
  });

  // ===== 2) –®–∞–≥–∏ –º–∞—Å—Ç–µ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (—Ç–æ–ª—å–∫–æ –õ–°) =====
  bot.on('message', async (msg) => {
    if (msg.chat.type !== 'private') return;
    const userId = msg.from.id;
    const s = wizardState.get(userId);
    if (!s) return;

    const p = s.payload;

    // 2.1 –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞
    if (s.step === 'ask_clan_name') {
      const name = normText(msg.text);
      if (!name) return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.');
      p.clan_name = name;
      s.step = 'ask_code';
      return bot.sendMessage(msg.chat.id, '‚úÖ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥.');
    }

    // 2.2 –ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥
    if (s.step === 'ask_code') {
      const code = normText(msg.text);
      if (!code || code !== FALLBACK_CODE) {
        return bot.sendMessage(msg.chat.id, '–ö–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
      }
      s.step = 'ask_leader_name';
      return bot.sendMessage(msg.chat.id, 'üë§ –í–≤–µ–¥–∏—Ç–µ –∏–º—è (–∫–∞–∫ –∑–æ–≤—É—Ç).');
    }

    // 2.3 –ò–º—è –ª–∏–¥–µ—Ä–∞
    if (s.step === 'ask_leader_name') {
      const leaderName = normText(msg.text);
      if (!leaderName) return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è.');
      p.leader_name = leaderName;
      s.step = 'ask_leader_nick';
      return bot.sendMessage(msg.chat.id, 'üè∑ –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ (–≤ –∏–≥—Ä–µ).');
    }

    // 2.4 –ù–∏–∫ –ª–∏–¥–µ—Ä–∞
    if (s.step === 'ask_leader_nick') {
      const leaderNick = normText(msg.text);
      if (!leaderNick) return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫.');
      p.leader_nick = leaderNick;
      s.step = 'ask_leader_pubg_id';
      return bot.sendMessage(msg.chat.id, 'üéÆ –í–≤–µ–¥–∏—Ç–µ PUBG ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).');
    }

    // 2.5 PUBG ID –ª–∏–¥–µ—Ä–∞
    if (s.step === 'ask_leader_pubg_id') {
      const pubgId = normDigits(msg.text);
      if (!pubgId) return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ PUBG ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).');
      p.leader_pubg_id = pubgId;
      s.step = 'ask_leader_age';
      return bot.sendMessage(msg.chat.id, 'üéÇ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ).');
    }

    // 2.6 –í–æ–∑—Ä–∞—Å—Ç –ª–∏–¥–µ—Ä–∞
    if (s.step === 'ask_leader_age') {
      const age = toIntOrNull(msg.text);
      if (!age || age < 10 || age > 99) {
        return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (10‚Äì99).');
      }
      p.leader_age = age;
      s.step = 'ask_leader_city';
      return bot.sendMessage(msg.chat.id, 'üìç –í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥.');
    }

    // 2.7 –ì–æ—Ä–æ–¥ –ª–∏–¥–µ—Ä–∞ ‚Üí —Ñ–∏–Ω–∞–ª (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ + –ª–∏–¥–µ—Ä–∞)
    if (s.step === 'ask_leader_city') {
      const city = normText(msg.text);
      if (!city) return bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥.');
      p.leader_city = city;

      const clanName = p.clan_name;
      const telegramTag = msg.from.username ? '@' + msg.from.username : null;

      try {
        // (A) —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞–Ω —É —ç—Ç–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞?
        const check = await db.query(
          `SELECT id, name
             FROM clans
            WHERE owner_actor_id = $1 AND is_active = TRUE
            LIMIT 1`,
          [userId]
        );
        if (check.rowCount > 0) {
          wizardState.delete(userId);
          return bot.sendMessage(
            msg.chat.id,
            `‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞–Ω ¬´${check.rows[0].name}¬ª (ID: ${check.rows[0].id}). ` +
            `–°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.`
          );
        }

        await db.query('BEGIN');

        // (B) —Å–æ–∑–¥–∞—ë–º –∫–ª–∞–Ω
        const insClan = await db.query(
          `INSERT INTO clans (name, owner_actor_id, is_active)
           VALUES ($1, $2, TRUE)
           ON CONFLICT (name) DO NOTHING
           RETURNING id`,
          [clanName, userId]
        );
        if (insClan.rowCount === 0) {
          await db.query('ROLLBACK');
          wizardState.delete(userId);
          return bot.sendMessage(msg.chat.id, '‚ö†Ô∏è –ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.');
        }
        const clanId = insClan.rows[0].id;

        // (C) —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏–¥–µ—Ä–∞ –≤ clan_members
        // –¢—Ä–µ–±—É–µ—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–∞ (clan, actor_id) ‚Äî —á—Ç–æ–±—ã –∞–ø–¥–µ–π—Ç–∏—Ç—å –±–µ–∑ –¥—É–±–ª–µ–π
        await db.query(
          `INSERT INTO clan_members
             (clan_id, actor_id, telegram_tag, name, nickname, pubg_id, age, city, active, created_at, clan)
           VALUES
             ($1,   $2,       $3,           $4,   $5,   $6,      $7,  $8, TRUE, NOW(), 1)
           ON CONFLICT (clan, actor_id) DO UPDATE
             SET telegram_tag = EXCLUDED.telegram_tag,
                 name         = EXCLUDED.name,
                 nickname     = EXCLUDED.nickname,
                 pubg_id      = EXCLUDED.pubg_id,
                 age          = EXCLUDED.age,
                 city         = EXCLUDED.city,
                 active       = TRUE`,
          [
            clanId,
            userId,
            telegramTag,
            p.leader_name,
            p.leader_nick,
            p.leader_pubg_id,
            p.leader_age,
            p.leader_city
          ]
        );

        await db.query('COMMIT');

        await bot.sendMessage(
          msg.chat.id,
          [
            `üéâ –ö–ª–∞–Ω ¬´${clanName}¬ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`,
            `üëë –õ–∏–¥–µ—Ä: ${p.leader_name} (${p.leader_nick}), PUBG ID: ${p.leader_pubg_id}, ${p.leader_age} –ª–µ—Ç, ${p.leader_city}.`,
            '',
            '–î–∞–ª—å—à–µ:',
            '1) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–∞–¥–º–∏–Ω-—á–∞—Ç**, –≤—ã–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∞–º: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–¥–º–∏–Ω–∫—É`.',
            '2) –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ **–æ–±—ã—á–Ω—ã–µ** —á–∞—Ç—ã –∫–ª–∞–Ω–∞ –∏ –≤ –∫–∞–∂–¥–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ: `!–ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç`.'
          ].join('\n'),
          { parse_mode: 'Markdown' }
        );

        wizardState.delete(userId);
      } catch (err) {
        try { await db.query('ROLLBACK'); } catch (_) {}
        if (err && err.code === '23505') {
          return bot.sendMessage(
            msg.chat.id,
            '‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.'
          );
        }
        console.error('register clan FINAL error', err);
        bot.sendMessage(msg.chat.id, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        wizardState.delete(userId);
      }
    }
  });

  // ===== 3) –ü—Ä–∏–≤—è–∑–∫–∞ –ê–î–ú–ò–ù-–ß–ê–¢–ê (–æ–¥–Ω–æ–≥–æ) =====
  // –∫–æ–º–∞–Ω–¥–∞: !–ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–¥–º–∏–Ω–∫—É
  bot.onText(/^!–ø—Ä–∏–≤—è–∑–∞—Ç—å\s+–∞–¥–º–∏–Ω–∫—É$/iu, async (msg) => {
    if (msg.chat.type === 'private') {
      return bot.sendMessage(msg.chat.id, '–ö–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ –∫–ª–∞–Ω–∞.');
    }

    const adminChatId = msg.chat.id;
    const ownerId = msg.from.id;

    try {
      const { rows } = await db.query(
        `SELECT id FROM clans WHERE owner_actor_id = $1 AND is_active = TRUE LIMIT 1`,
        [ownerId]
      );
      if (!rows.length) {
        return bot.sendMessage(adminChatId, '–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∫–ª–∞–Ω –≤ –ª–∏—á–∫–µ –±–æ—Ç–∞.');
      }

      const clanId = rows[0].id;

      await db.query(
        `UPDATE clans
            SET admin_chat_id = $1
          WHERE id = $2`,
        [adminChatId, clanId]
      );

      await bot.sendMessage(
        adminChatId,
        `‚úÖ –≠—Ç–æ—Ç —á–∞—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –∫–∞–∫ *–∞–¥–º–∏–Ω-—á–∞—Ç* –∫–ª–∞–Ω–∞ #${clanId}.`,
        { parse_mode: 'Markdown' }
      );
    } catch (e) {
      console.error('bind_admin error', e);
      bot.sendMessage(adminChatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –∞–¥–º–∏–Ω-—á–∞—Ç.');
    }
  });

  // ===== 4) –ü—Ä–∏–≤—è–∑–∫–∞ –û–ë–´–ß–ù–û–ì–û —á–∞—Ç–∞ (–º–Ω–æ–≥–æ –Ω–∞ –∫–ª–∞–Ω) =====
  // –∫–æ–º–∞–Ω–¥–∞: !–ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç
  bot.onText(/^!–ø—Ä–∏–≤—è–∑–∞—Ç—å\s+—á–∞—Ç$/iu, async (msg) => {
    if (msg.chat.type === 'private') {
      return bot.sendMessage(msg.chat.id, '–ö–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ –∫–ª–∞–Ω–∞.');
    }

    const chatId = msg.chat.id;
    const ownerId = msg.from.id;

    try {
      const { rows } = await db.query(
        `SELECT id FROM clans WHERE owner_actor_id = $1 AND is_active = TRUE LIMIT 1`,
        [ownerId]
      );
      if (!rows.length) {
        return bot.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –∫–ª–∞–Ω –≤ –ª–∏—á–∫–µ –±–æ—Ç–∞.');
      }

      const clanId = rows[0].id;

      await db.query(
        `INSERT INTO clan_member_chats (clan_id, chat_id, active)
         VALUES ($1, $2, TRUE)
         ON CONFLICT (chat_id) DO UPDATE
           SET clan_id = EXCLUDED.clan_id,
               active = TRUE`,
        [clanId, chatId]
      );

      await bot.sendMessage(chatId, `‚úÖ –ß–∞—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∫–ª–∞–Ω—É.`, { parse_mode: 'Markdown' });
    } catch (e) {
      console.error('bind_member error', e);
      bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç.');
    }
  });
};
